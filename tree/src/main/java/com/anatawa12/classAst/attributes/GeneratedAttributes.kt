package com.anatawa12.classAst.attributes

// THIS FILE IS GENERATED BY AttributesGenerator.kt.
// DO NOT EDIT MANUALLY

import com.anatawa12.autoToString.AutoToString
import com.anatawa12.classAst.*
import com.anatawa12.classAst.annotation.*
import com.anatawa12.classAst.attributes.AttributeTarget.Companion.ClassFile
import com.anatawa12.classAst.attributes.AttributeTarget.Companion.Code
import com.anatawa12.classAst.attributes.AttributeTarget.Companion.FieldInfo
import com.anatawa12.classAst.attributes.AttributeTarget.Companion.MethodInfo
import com.anatawa12.classAst.attributes.AttributeTarget.Companion.RecordComponentInfo
import com.anatawa12.classAst.code.Code
import com.anatawa12.classAst.code.StackMapFrame

/**
 * The ConstantValue Attribute.
 * @spec 4.7.2
 */
@AutoToString("value")
class ConstantValueAttribute(
    name: ConstantUtf8,
    var value: ConstantValue,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        ConstantValueAttribute::class, 
        "ConstantValue", 
        CV45_3, 
        FieldInfo,
    )
}

/**
 * The Code Attribute.
 * @spec 4.7.3
 */
@AutoToString("maxStack", "macLocals", "code", "exceptions", "attributes")
class CodeAttribute(
    name: ConstantUtf8,
    var maxStack: UShort,
    var macLocals: UShort,
    val code: Code,
    val exceptions: MutableList<ExceptionTable>,
    val attributes: MutableList<Attribute>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        CodeAttribute::class, 
        "Code", 
        CV45_3, 
        MethodInfo,
    )
}

/**
 * The StackMapTable Attribute.
 * @spec 4.7.4
 */
@AutoToString("entries")
class StackMapTableAttribute(
    name: ConstantUtf8,
    val entries: MutableList<StackMapFrame>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        StackMapTableAttribute::class, 
        "StackMapTable", 
        CV50_0, 
        Code,
    )
}

/**
 * The Exceptions Attribute.
 * @spec 4.7.5
 */
@AutoToString("exceptions")
class ExceptionsAttribute(
    name: ConstantUtf8,
    val exceptions: MutableList<ConstantClass>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        ExceptionsAttribute::class, 
        "Exceptions", 
        CV45_3, 
        MethodInfo,
    )
}

/**
 * The InnerClasses Attribute.
 * @spec 4.7.6
 */
@AutoToString("classes")
class InnerClassesAttribute(
    name: ConstantUtf8,
    val classes: MutableList<InnerClassInformation>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        InnerClassesAttribute::class, 
        "InnerClasses", 
        CV45_3, 
        ClassFile,
    )
}

/**
 * The EnclosingMethod Attribute.
 * @spec 4.7.7
 */
@AutoToString("outerClass", "method")
class EnclosingMethodAttribute(
    name: ConstantUtf8,
    var outerClass: ConstantClass,
    var method: ConstantNameAndType?,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        EnclosingMethodAttribute::class, 
        "EnclosingMethod", 
        CV49_0, 
        ClassFile,
    )
}

/**
 * The Synthetic Attribute.
 * @spec 4.7.8
 */
@AutoToString()
class SyntheticAttribute(
    name: ConstantUtf8,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        SyntheticAttribute::class, 
        "Synthetic", 
        CV45_3, 
        ClassFile,
        FieldInfo,
        MethodInfo,
    )
}

/**
 * The Signature Attribute.
 * @spec 4.7.9
 */
@AutoToString("signature")
class SignatureAttribute(
    name: ConstantUtf8,
    var signature: ConstantUtf8,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        SignatureAttribute::class, 
        "Signature", 
        CV49_0, 
        ClassFile,
        FieldInfo,
        MethodInfo,
        RecordComponentInfo,
    )
}

/**
 * The SourceFile Attribute.
 * @spec 4.7.10
 */
@AutoToString("sourceFile")
class SourceFileAttribute(
    name: ConstantUtf8,
    var sourceFile: ConstantUtf8,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        SourceFileAttribute::class, 
        "SourceFile", 
        CV45_3, 
        ClassFile,
    )
}

// SourceDebugExtension is in other file

/**
 * The LineNumberTable Attribute.
 * @spec 4.7.12
 */
@AutoToString("table")
class LineNumberTableAttribute(
    name: ConstantUtf8,
    val table: MutableList<LineNumberPair>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        LineNumberTableAttribute::class, 
        "LineNumberTable", 
        CV45_3, 
        Code,
    )
}

/**
 * The LocalVariableTable Attribute.
 * @spec 4.7.13
 */
@AutoToString("table")
class LocalVariableTableAttribute(
    name: ConstantUtf8,
    val table: MutableList<LocalVariableTableEntry>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        LocalVariableTableAttribute::class, 
        "LocalVariableTable", 
        CV45_3, 
        Code,
    )
}

/**
 * The LocalVariableTypeTable Attribute.
 * @spec 4.7.14
 */
@AutoToString("table")
class LocalVariableTypeTableAttribute(
    name: ConstantUtf8,
    val table: MutableList<LocalVariableTypeTableEntry>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        LocalVariableTypeTableAttribute::class, 
        "LocalVariableTypeTable", 
        CV49_0, 
        Code,
    )
}

/**
 * The Deprecated Attribute.
 * @spec 4.7.15
 */
@AutoToString()
class DeprecatedAttribute(
    name: ConstantUtf8,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        DeprecatedAttribute::class, 
        "Deprecated", 
        CV45_3, 
        ClassFile,
        FieldInfo,
        MethodInfo,
    )
}

/**
 * The RuntimeVisibleAnnotations Attribute.
 * @spec 4.7.16
 */
@AutoToString("annotations")
class RuntimeVisibleAnnotationsAttribute(
    name: ConstantUtf8,
    val annotations: MutableList<ClassFileAnnotation>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        RuntimeVisibleAnnotationsAttribute::class, 
        "RuntimeVisibleAnnotations", 
        CV49_0, 
        ClassFile,
        FieldInfo,
        MethodInfo,
        RecordComponentInfo,
    )
}

/**
 * The RuntimeInvisibleAnnotations Attribute.
 * @spec 4.7.17
 */
@AutoToString("annotations")
class RuntimeInvisibleAnnotationsAttribute(
    name: ConstantUtf8,
    val annotations: MutableList<ClassFileAnnotation>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        RuntimeInvisibleAnnotationsAttribute::class, 
        "RuntimeInvisibleAnnotations", 
        CV49_0, 
        ClassFile,
        FieldInfo,
        MethodInfo,
        RecordComponentInfo,
    )
}

/**
 * The RuntimeVisibleParameterAnnotations Attribute.
 * @spec 4.7.18
 */
@AutoToString("annotations")
class RuntimeVisibleParameterAnnotationsAttribute(
    name: ConstantUtf8,
    val annotations: MutableList<MutableList<ClassFileAnnotation>>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        RuntimeVisibleParameterAnnotationsAttribute::class, 
        "RuntimeVisibleParameterAnnotations", 
        CV49_0, 
        MethodInfo,
    )
}

/**
 * The RuntimeInvisibleParameterAnnotations Attribute.
 * @spec 4.7.19
 */
@AutoToString("annotations")
class RuntimeInvisibleParameterAnnotationsAttribute(
    name: ConstantUtf8,
    val annotations: MutableList<MutableList<ClassFileAnnotation>>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        RuntimeInvisibleParameterAnnotationsAttribute::class, 
        "RuntimeInvisibleParameterAnnotations", 
        CV49_0, 
        MethodInfo,
    )
}

/**
 * The RuntimeVisibleTypeAnnotations Attribute.
 * @spec 4.7.20
 */
@AutoToString("annotations")
class RuntimeVisibleTypeAnnotationsAttribute(
    name: ConstantUtf8,
    val annotations: MutableList<ClassFileTypeAnnotation>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        RuntimeVisibleTypeAnnotationsAttribute::class, 
        "RuntimeVisibleTypeAnnotations", 
        CV52_0, 
        ClassFile,
        FieldInfo,
        MethodInfo,
        Code,
        RecordComponentInfo,
    )
}

/**
 * The RuntimeInvisibleTypeAnnotations Attribute.
 * @spec 4.7.21
 */
@AutoToString("annotations")
class RuntimeInvisibleTypeAnnotationsAttribute(
    name: ConstantUtf8,
    val annotations: MutableList<ClassFileTypeAnnotation>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        RuntimeInvisibleTypeAnnotationsAttribute::class, 
        "RuntimeInvisibleTypeAnnotations", 
        CV52_0, 
        ClassFile,
        FieldInfo,
        MethodInfo,
        Code,
        RecordComponentInfo,
    )
}

/**
 * The AnnotationDefault Attribute.
 * @spec 4.7.22
 */
@AutoToString("defaultValue")
class AnnotationDefaultAttribute(
    name: ConstantUtf8,
    var defaultValue: ElementValue,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        AnnotationDefaultAttribute::class, 
        "AnnotationDefault", 
        CV49_0, 
        MethodInfo,
    )
}

/**
 * The BootstrapMethods Attribute.
 * @spec 4.7.23
 */
@AutoToString("boostrapMethods")
class BootstrapMethodsAttribute(
    name: ConstantUtf8,
    val boostrapMethods: MutableList<BootstrapMethod>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        BootstrapMethodsAttribute::class, 
        "BootstrapMethods", 
        CV51_0, 
        ClassFile,
    )
}

/**
 * The MethodParameters Attribute.
 * @spec 4.7.24
 */
@AutoToString("parameters")
class MethodParametersAttribute(
    name: ConstantUtf8,
    val parameters: MutableList<ParameterNameAccessPair>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        MethodParametersAttribute::class, 
        "MethodParameters", 
        CV52_0, 
        MethodInfo,
    )
}

/**
 * The Module Attribute.
 * @spec 4.7.25
 */
@AutoToString("moduleName", "moduleFlags", "moduleVersion", "requires", "exports", "opens", "uses", "provides")
class ModuleAttribute(
    name: ConstantUtf8,
    var moduleName: ConstantUtf8,
    var moduleFlags: AccessFlags,
    var moduleVersion: ConstantUtf8,
    val requires: MutableList<ModuleRequire>,
    val exports: MutableList<ModuleExports>,
    val opens: MutableList<ModuleOpens>,
    val uses: MutableList<ConstantClass>,
    val provides: MutableList<ModuleProvides>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        ModuleAttribute::class, 
        "Module", 
        CV53_0, 
        ClassFile,
    )
}

/**
 * The ModulePackages Attribute.
 * @spec 4.7.26
 */
@AutoToString("packages")
class ModulePackagesAttribute(
    name: ConstantUtf8,
    val packages: MutableList<ConstantPackage>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        ModulePackagesAttribute::class, 
        "ModulePackages", 
        CV53_0, 
        ClassFile,
    )
}

/**
 * The ModuleMainClass Attribute.
 * @spec 4.7.27
 */
@AutoToString("mainClass")
class ModuleMainClassAttribute(
    name: ConstantUtf8,
    var mainClass: ConstantClass,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        ModuleMainClassAttribute::class, 
        "ModuleMainClass", 
        CV53_0, 
        ClassFile,
    )
}

/**
 * The NestHost Attribute.
 * @spec 4.7.28
 */
@AutoToString("hostClass")
class NestHostAttribute(
    name: ConstantUtf8,
    var hostClass: ConstantClass,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        NestHostAttribute::class, 
        "NestHost", 
        CV55_0, 
        ClassFile,
    )
}

/**
 * The NestMembers Attribute.
 * @spec 4.7.29
 */
@AutoToString("classes")
class NestMembersAttribute(
    name: ConstantUtf8,
    val classes: MutableList<ConstantClass>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        NestMembersAttribute::class, 
        "NestMembers", 
        CV55_0, 
        ClassFile,
    )
}

/**
 * The Record Attribute.
 * @spec 4.7.30
 */
@AutoToString("components")
class RecordAttribute(
    name: ConstantUtf8,
    val components: MutableList<RecordComponent>,
) : Attribute(name, Type) {
    companion object Type : AttributeType(
        RecordAttribute::class, 
        "Record", 
        CV60_0, 
        ClassFile,
    )
}

